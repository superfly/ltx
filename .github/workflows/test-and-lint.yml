name: Test and Lint

on:
  push:
    branches: [ main, page-index, page-index-fixes ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22', '1.23', '1.24']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.go-version == '1.24'
        with:
          file: ./coverage.out
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run go fmt
        run: |
          fmt_output=$(go fmt ./...)
          if [ -n "$fmt_output" ]; then
            echo "The following files need formatting:"
            echo "$fmt_output"
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install revive
        run: go install github.com/mgechev/revive@latest

      - name: Run revive
        run: revive -config .revive.toml ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build
        run: go build -v ./...

      - name: Build CLI
        run: go build -v -o ltx ./cmd/ltx